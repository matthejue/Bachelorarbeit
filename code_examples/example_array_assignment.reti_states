index:       1
instruction: LOADIN BAF PC -1;
ACC:         42
ACC_SIMPLE:  42
IN1:         2147483674
IN1_SIMPLE:  26
IN2:         2
IN2_SIMPLE:  2
PC:          2147483648
PC_SIMPLE:   0
SP:          2147483703
SP_SIMPLE:   55
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483672
DS_SIMPLE:   24
SRAM:
  00000 JUMP 0; <- PC
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 42;
  00005 STOREIN SP ACC 1;
  00006 SUBI SP 1;
  00007 LOADI IN1 0;
  00008 ADD IN1 DS;
  00009 STOREIN SP IN1 1;
  00010 SUBI SP 1;
  00011 LOADI ACC 2;
  00012 STOREIN SP ACC 1;
  00013 LOADIN SP IN1 2;
  00014 LOADIN SP IN2 1;
  00015 MULTI IN2 1;
  00016 ADD IN1 IN2;
  00017 ADDI SP 1;
  00018 STOREIN SP IN1 1;
  00019 LOADIN SP IN1 1;
  00020 LOADIN SP ACC 2;
  00021 ADDI SP 2;
  00022 STOREIN IN1 ACC 0;
  00023 LOADIN BAF PC -1;
  00024 0 <- DS
  00025 0
  00026 42 <- IN1
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 2
  00054 2147483674
  00055 42 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152;
  00001 MULTI DS 1024;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 55;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 24;
  00009 MOVE CS PC;