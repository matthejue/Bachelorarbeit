index:       1
instruction: LOADIN BAF PC -1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483648
PC_SIMPLE:   0
SP:          2147483704
SP_SIMPLE:   56
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483673
DS_SIMPLE:   25
SRAM:
  00000 JUMP 0; <- PC
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 1;
  00005 STOREIN SP ACC 1;
  00006 SUBI SP 1;
  00007 LOADI ACC 2;
  00008 STOREIN SP ACC 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 3;
  00011 STOREIN SP ACC 1;
  00012 SUBI SP 1;
  00013 LOADI ACC 4;
  00014 STOREIN SP ACC 1;
  00015 LOADIN SP ACC 1;
  00016 STOREIN DS ACC 3;
  00017 LOADIN SP ACC 2;
  00018 STOREIN DS ACC 2;
  00019 LOADIN SP ACC 3;
  00020 STOREIN DS ACC 1;
  00021 LOADIN SP ACC 4;
  00022 STOREIN DS ACC 0;
  00023 ADDI SP 4;
  00024 LOADIN BAF PC -1;
  00025 1 <- DS
  00026 2
  00027 3
  00028 4
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 4
  00054 3
  00055 2
  00056 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 56;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 25;
  00009 MOVE CS PC;