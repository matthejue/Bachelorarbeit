index:       1
instruction: LOADIN BAF PC -1;
ACC:         42
ACC_SIMPLE:  42
IN1:         2147483694
IN1_SIMPLE:  46
IN2:         0
IN2_SIMPLE:  0
PC:          2147483648
PC_SIMPLE:   0
SP:          2147483724
SP_SIMPLE:   76
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0; <- PC
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 42;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI IN1 0;
  00011 ADD IN1 DS;
  00012 STOREIN SP IN1 1;
  00013 LOADIN SP ACC 1;
  00014 STOREIN DS ACC 1;
  00015 ADDI SP 1;
  00016 SUBI SP 1;
  00017 LOADI IN1 1;
  00018 ADD IN1 DS;
  00019 STOREIN SP IN1 1;
  00020 LOADIN SP IN1 1;
  00021 ADDI IN1 0;
  00022 STOREIN SP IN1 1;
  00023 SUBI SP 1;
  00024 LOADI ACC 0;
  00025 STOREIN SP ACC 1;
  00026 LOADIN SP IN2 2;
  00027 LOADIN IN2 IN1 0;
  00028 LOADIN SP IN2 1;
  00029 MULTI IN2 1;
  00030 ADD IN1 IN2;
  00031 ADDI SP 1;
  00032 STOREIN SP IN1 1;
  00033 SUBI SP 1;
  00034 LOADI ACC 0;
  00035 STOREIN SP ACC 1;
  00036 LOADIN SP IN1 2;
  00037 LOADIN SP IN2 1;
  00038 MULTI IN2 1;
  00039 ADD IN1 IN2;
  00040 ADDI SP 1;
  00041 STOREIN SP IN1 1;
  00042 LOADIN SP IN1 1;
  00043 LOADIN IN1 ACC 0;
  00044 STOREIN SP ACC 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- IN1 <- DS
  00047 2147483694
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0 <- SP
  00077 42
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;