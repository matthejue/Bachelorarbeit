index:       1
instruction: LOADI DS -2097152;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          1
PC_SIMPLE:   1
SP:          0
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2097152
DS_SIMPLE:   2097152
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 SUBI SP 1;
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- SP <- BAF <- CS
  00001 MULTI DS 1024; <- PC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       2
instruction: MULTI DS 1024;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2
PC_SIMPLE:   2
SP:          0
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- DS
  00001 2147483648
  00002 0
  00003 SUBI SP 1;
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- SP <- BAF <- CS
  00001 MULTI DS 1024;
  00002 MOVE DS SP; <- PC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       3
instruction: MOVE DS SP;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          3
PC_SIMPLE:   3
SP:          2147483648
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- SP <- DS
  00001 2147483648
  00002 0
  00003 SUBI SP 1;
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- BAF <- CS
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- PC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       4
instruction: MOVE DS BAF;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          4
PC_SIMPLE:   4
SP:          2147483648
SP_SIMPLE:   0
BAF:         2147483648
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- SP <- BAF <- DS
  00001 2147483648
  00002 0
  00003 SUBI SP 1;
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- CS
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- PC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       5
instruction: MOVE DS CS;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          5
PC_SIMPLE:   5
SP:          2147483648
SP_SIMPLE:   0
BAF:         2147483648
BAF_SIMPLE:  0
CS:          2147483648
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- SP <- BAF <- CS <- DS
  00001 2147483648
  00002 0
  00003 SUBI SP 1;
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101; <- PC
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       6
instruction: ADDI SP 101;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          6
PC_SIMPLE:   6
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483648
BAF_SIMPLE:  0
CS:          2147483648
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- BAF <- CS <- DS
  00001 2147483648
  00002 0
  00003 SUBI SP 1;
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2; <- PC
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       7
instruction: ADDI BAF 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          7
PC_SIMPLE:   7
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483648
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- CS <- DS
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1;
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3; <- PC
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       8
instruction: ADDI CS 3;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          8
PC_SIMPLE:   8
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- DS
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70; <- PC
  00009 MOVE CS PC;

index:       9
instruction: ADDI DS 70;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          9
PC_SIMPLE:   9
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC; <- PC

index:       10
instruction: MOVE CS PC;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483651
PC_SIMPLE:   3
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- PC <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       11
instruction: SUBI SP 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483652
PC_SIMPLE:   4
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4; <- PC
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       12
instruction: LOADI ACC 4;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1; <- PC
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       13
instruction: STOREIN SP ACC 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1; <- PC
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       14
instruction: LOADIN SP ACC 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0; <- PC
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 0 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       15
instruction: STOREIN DS ACC 0;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1; <- PC
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       16
instruction: ADDI SP 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1; <- PC
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 4 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       17
instruction: SUBI SP 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1; <- PC
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       18
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1; <- PC
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       19
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1; <- PC
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       20
instruction: LOADIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1; <- PC
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       21
instruction: STOREIN DS ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1; <- PC
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       22
instruction: ADDI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1; <- PC
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       23
instruction: SUBI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1; <- PC
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       24
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1; <- PC
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       25
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1; <- PC
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       26
instruction: LOADIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1; <- PC
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       27
instruction: ADDI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49; <- PC
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       28
instruction: JUMP== 49;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1; <- PC
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       29
instruction: SUBI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0; <- PC
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       30
instruction: LOADIN DS ACC 0;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1; <- PC
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       31
instruction: STOREIN SP ACC 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1; <- PC
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 0 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       32
instruction: SUBI SP 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1; <- PC
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 0
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       33
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1; <- PC
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 0
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       34
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2; <- PC
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       35
instruction: LOADIN SP ACC 2;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1; <- PC
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       36
instruction: LOADIN SP IN2 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2; <- PC
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       37
instruction: SUB ACC IN2;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3; <- PC
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       38
instruction: JUMP== 3;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0; <- PC
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       39
instruction: LOADI ACC 0;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483680
PC_SIMPLE:   32
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2; <- PC
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       40
instruction: JUMP 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2; <- PC
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       41
instruction: STOREIN SP ACC 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1; <- PC
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       42
instruction: ADDI SP 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1; <- PC
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       43
instruction: LOADIN SP ACC 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1; <- PC
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       44
instruction: ADDI SP 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483686
PC_SIMPLE:   38
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2; <- PC
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       45
instruction: JUMP== 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483688
PC_SIMPLE:   40
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1; <- PC
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       46
instruction: SUBI SP 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483689
PC_SIMPLE:   41
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0; <- PC
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       47
instruction: LOADIN DS ACC 0;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483690
PC_SIMPLE:   42
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1; <- PC
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       48
instruction: STOREIN SP ACC 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483691
PC_SIMPLE:   43
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1; <- PC
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       49
instruction: SUBI SP 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483692
PC_SIMPLE:   44
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1; <- PC
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       50
instruction: LOADIN DS ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1; <- PC
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       51
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483694
PC_SIMPLE:   46
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2; <- PC
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       52
instruction: LOADIN SP ACC 2;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483695
PC_SIMPLE:   47
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1; <- PC
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       53
instruction: LOADIN SP IN2 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483696
PC_SIMPLE:   48
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2; <- PC
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       54
instruction: MULT ACC IN2;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483697
PC_SIMPLE:   49
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2; <- PC
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       55
instruction: STOREIN SP ACC 2;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483698
PC_SIMPLE:   50
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1; <- PC
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       56
instruction: ADDI SP 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483699
PC_SIMPLE:   51
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1; <- PC
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       57
instruction: LOADIN SP ACC 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483700
PC_SIMPLE:   52
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1; <- PC
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 1
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       58
instruction: STOREIN DS ACC 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483701
PC_SIMPLE:   53
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1; <- PC
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       59
instruction: ADDI SP 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483702
PC_SIMPLE:   54
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1; <- PC
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 4 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       60
instruction: SUBI SP 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483703
PC_SIMPLE:   55
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0; <- PC
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       61
instruction: LOADIN DS ACC 0;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483704
PC_SIMPLE:   56
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1; <- PC
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       62
instruction: STOREIN SP ACC 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483705
PC_SIMPLE:   57
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1; <- PC
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       63
instruction: SUBI SP 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483706
PC_SIMPLE:   58
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1; <- PC
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       64
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483707
PC_SIMPLE:   59
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1; <- PC
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       65
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483708
PC_SIMPLE:   60
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2; <- PC
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       66
instruction: LOADIN SP ACC 2;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483709
PC_SIMPLE:   61
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1; <- PC
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       67
instruction: LOADIN SP IN2 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483710
PC_SIMPLE:   62
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2; <- PC
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       68
instruction: SUB ACC IN2;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483711
PC_SIMPLE:   63
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2; <- PC
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 4
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       69
instruction: STOREIN SP ACC 2;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483712
PC_SIMPLE:   64
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1; <- PC
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       70
instruction: ADDI SP 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483713
PC_SIMPLE:   65
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1; <- PC
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       71
instruction: LOADIN SP ACC 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483714
PC_SIMPLE:   66
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0; <- PC
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 4 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       72
instruction: STOREIN DS ACC 0;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483715
PC_SIMPLE:   67
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1; <- PC
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       73
instruction: ADDI SP 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483716
PC_SIMPLE:   68
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53; <- PC
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 3 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       74
instruction: JUMP -53;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1; <- PC
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 3 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       75
instruction: SUBI SP 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1; <- PC
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       76
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1; <- PC
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       77
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1; <- PC
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       78
instruction: LOADIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1; <- PC
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       79
instruction: ADDI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49; <- PC
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       80
instruction: JUMP== 49;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1; <- PC
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       81
instruction: SUBI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0; <- PC
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       82
instruction: LOADIN DS ACC 0;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1; <- PC
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       83
instruction: STOREIN SP ACC 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1; <- PC
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       84
instruction: SUBI SP 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1; <- PC
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       85
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1; <- PC
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       86
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2; <- PC
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       87
instruction: LOADIN SP ACC 2;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1; <- PC
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       88
instruction: LOADIN SP IN2 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2; <- PC
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       89
instruction: SUB ACC IN2;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3; <- PC
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       90
instruction: JUMP== 3;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0; <- PC
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       91
instruction: LOADI ACC 0;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483680
PC_SIMPLE:   32
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2; <- PC
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       92
instruction: JUMP 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2; <- PC
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       93
instruction: STOREIN SP ACC 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1; <- PC
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       94
instruction: ADDI SP 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1; <- PC
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       95
instruction: LOADIN SP ACC 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1; <- PC
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       96
instruction: ADDI SP 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483686
PC_SIMPLE:   38
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2; <- PC
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       97
instruction: JUMP== 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483688
PC_SIMPLE:   40
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1; <- PC
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       98
instruction: SUBI SP 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483689
PC_SIMPLE:   41
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0; <- PC
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       99
instruction: LOADIN DS ACC 0;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483690
PC_SIMPLE:   42
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1; <- PC
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       100
instruction: STOREIN SP ACC 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483691
PC_SIMPLE:   43
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1; <- PC
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       101
instruction: SUBI SP 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483692
PC_SIMPLE:   44
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1; <- PC
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       102
instruction: LOADIN DS ACC 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1; <- PC
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       103
instruction: STOREIN SP ACC 1;
ACC:         4
ACC_SIMPLE:  4
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483694
PC_SIMPLE:   46
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2; <- PC
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 4
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       104
instruction: LOADIN SP ACC 2;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483695
PC_SIMPLE:   47
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1; <- PC
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 4
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       105
instruction: LOADIN SP IN2 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483696
PC_SIMPLE:   48
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2; <- PC
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 4
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       106
instruction: MULT ACC IN2;
ACC:         12
ACC_SIMPLE:  12
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483697
PC_SIMPLE:   49
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2; <- PC
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 4
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       107
instruction: STOREIN SP ACC 2;
ACC:         12
ACC_SIMPLE:  12
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483698
PC_SIMPLE:   50
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1; <- PC
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 4
  00101 12
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       108
instruction: ADDI SP 1;
ACC:         12
ACC_SIMPLE:  12
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483699
PC_SIMPLE:   51
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1; <- PC
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 4 <- SP
  00101 12
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       109
instruction: LOADIN SP ACC 1;
ACC:         12
ACC_SIMPLE:  12
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483700
PC_SIMPLE:   52
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1; <- PC
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 4
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 4 <- SP
  00101 12
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       110
instruction: STOREIN DS ACC 1;
ACC:         12
ACC_SIMPLE:  12
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483701
PC_SIMPLE:   53
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1; <- PC
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 4 <- SP
  00101 12
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       111
instruction: ADDI SP 1;
ACC:         12
ACC_SIMPLE:  12
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483702
PC_SIMPLE:   54
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1; <- PC
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 4
  00101 12 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       112
instruction: SUBI SP 1;
ACC:         12
ACC_SIMPLE:  12
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483703
PC_SIMPLE:   55
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0; <- PC
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 4 <- SP
  00101 12
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       113
instruction: LOADIN DS ACC 0;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483704
PC_SIMPLE:   56
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1; <- PC
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 4 <- SP
  00101 12
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       114
instruction: STOREIN SP ACC 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483705
PC_SIMPLE:   57
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1; <- PC
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 4 <- SP
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       115
instruction: SUBI SP 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483706
PC_SIMPLE:   58
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1; <- PC
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 4
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       116
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483707
PC_SIMPLE:   59
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1; <- PC
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 4
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       117
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483708
PC_SIMPLE:   60
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2; <- PC
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       118
instruction: LOADIN SP ACC 2;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         4
IN2_SIMPLE:  4
PC:          2147483709
PC_SIMPLE:   61
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1; <- PC
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       119
instruction: LOADIN SP IN2 1;
ACC:         3
ACC_SIMPLE:  3
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483710
PC_SIMPLE:   62
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2; <- PC
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       120
instruction: SUB ACC IN2;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483711
PC_SIMPLE:   63
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2; <- PC
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 3
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       121
instruction: STOREIN SP ACC 2;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483712
PC_SIMPLE:   64
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1; <- PC
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       122
instruction: ADDI SP 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483713
PC_SIMPLE:   65
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1; <- PC
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       123
instruction: LOADIN SP ACC 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483714
PC_SIMPLE:   66
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0; <- PC
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 3 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       124
instruction: STOREIN DS ACC 0;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483715
PC_SIMPLE:   67
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1; <- PC
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       125
instruction: ADDI SP 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483716
PC_SIMPLE:   68
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53; <- PC
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 2 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       126
instruction: JUMP -53;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1; <- PC
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 2 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       127
instruction: SUBI SP 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1; <- PC
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       128
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1; <- PC
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       129
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1; <- PC
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       130
instruction: LOADIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1; <- PC
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       131
instruction: ADDI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49; <- PC
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       132
instruction: JUMP== 49;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1; <- PC
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       133
instruction: SUBI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0; <- PC
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       134
instruction: LOADIN DS ACC 0;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1; <- PC
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       135
instruction: STOREIN SP ACC 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1; <- PC
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       136
instruction: SUBI SP 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1; <- PC
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       137
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1; <- PC
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       138
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2; <- PC
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       139
instruction: LOADIN SP ACC 2;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1; <- PC
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       140
instruction: LOADIN SP IN2 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2; <- PC
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       141
instruction: SUB ACC IN2;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3; <- PC
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       142
instruction: JUMP== 3;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0; <- PC
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       143
instruction: LOADI ACC 0;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483680
PC_SIMPLE:   32
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2; <- PC
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       144
instruction: JUMP 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2; <- PC
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       145
instruction: STOREIN SP ACC 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1; <- PC
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       146
instruction: ADDI SP 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1; <- PC
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       147
instruction: LOADIN SP ACC 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1; <- PC
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       148
instruction: ADDI SP 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483686
PC_SIMPLE:   38
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2; <- PC
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       149
instruction: JUMP== 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483688
PC_SIMPLE:   40
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1; <- PC
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       150
instruction: SUBI SP 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483689
PC_SIMPLE:   41
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0; <- PC
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       151
instruction: LOADIN DS ACC 0;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483690
PC_SIMPLE:   42
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1; <- PC
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       152
instruction: STOREIN SP ACC 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483691
PC_SIMPLE:   43
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1; <- PC
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       153
instruction: SUBI SP 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483692
PC_SIMPLE:   44
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1; <- PC
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       154
instruction: LOADIN DS ACC 1;
ACC:         12
ACC_SIMPLE:  12
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1; <- PC
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       155
instruction: STOREIN SP ACC 1;
ACC:         12
ACC_SIMPLE:  12
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483694
PC_SIMPLE:   46
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2; <- PC
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 12
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       156
instruction: LOADIN SP ACC 2;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483695
PC_SIMPLE:   47
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1; <- PC
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 12
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       157
instruction: LOADIN SP IN2 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483696
PC_SIMPLE:   48
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2; <- PC
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 12
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       158
instruction: MULT ACC IN2;
ACC:         24
ACC_SIMPLE:  24
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483697
PC_SIMPLE:   49
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2; <- PC
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 12
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       159
instruction: STOREIN SP ACC 2;
ACC:         24
ACC_SIMPLE:  24
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483698
PC_SIMPLE:   50
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1; <- PC
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 12
  00101 24
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       160
instruction: ADDI SP 1;
ACC:         24
ACC_SIMPLE:  24
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483699
PC_SIMPLE:   51
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1; <- PC
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 12 <- SP
  00101 24
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       161
instruction: LOADIN SP ACC 1;
ACC:         24
ACC_SIMPLE:  24
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483700
PC_SIMPLE:   52
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1; <- PC
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 12
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 12 <- SP
  00101 24
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       162
instruction: STOREIN DS ACC 1;
ACC:         24
ACC_SIMPLE:  24
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483701
PC_SIMPLE:   53
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1; <- PC
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 12 <- SP
  00101 24
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       163
instruction: ADDI SP 1;
ACC:         24
ACC_SIMPLE:  24
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483702
PC_SIMPLE:   54
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1; <- PC
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 12
  00101 24 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       164
instruction: SUBI SP 1;
ACC:         24
ACC_SIMPLE:  24
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483703
PC_SIMPLE:   55
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0; <- PC
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 12 <- SP
  00101 24
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       165
instruction: LOADIN DS ACC 0;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483704
PC_SIMPLE:   56
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1; <- PC
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 12 <- SP
  00101 24
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       166
instruction: STOREIN SP ACC 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483705
PC_SIMPLE:   57
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1; <- PC
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 12 <- SP
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       167
instruction: SUBI SP 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483706
PC_SIMPLE:   58
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1; <- PC
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 12
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       168
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483707
PC_SIMPLE:   59
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1; <- PC
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 12
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       169
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483708
PC_SIMPLE:   60
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2; <- PC
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       170
instruction: LOADIN SP ACC 2;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         12
IN2_SIMPLE:  12
PC:          2147483709
PC_SIMPLE:   61
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1; <- PC
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       171
instruction: LOADIN SP IN2 1;
ACC:         2
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483710
PC_SIMPLE:   62
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2; <- PC
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       172
instruction: SUB ACC IN2;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483711
PC_SIMPLE:   63
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2; <- PC
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 2
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       173
instruction: STOREIN SP ACC 2;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483712
PC_SIMPLE:   64
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1; <- PC
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       174
instruction: ADDI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483713
PC_SIMPLE:   65
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1; <- PC
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       175
instruction: LOADIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483714
PC_SIMPLE:   66
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0; <- PC
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 2 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       176
instruction: STOREIN DS ACC 0;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483715
PC_SIMPLE:   67
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1; <- PC
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       177
instruction: ADDI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483716
PC_SIMPLE:   68
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53; <- PC
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       178
instruction: JUMP -53;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1; <- PC
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       179
instruction: SUBI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1; <- PC
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       180
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1; <- PC
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       181
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1; <- PC
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       182
instruction: LOADIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1; <- PC
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       183
instruction: ADDI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49; <- PC
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       184
instruction: JUMP== 49;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1; <- PC
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       185
instruction: SUBI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0; <- PC
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       186
instruction: LOADIN DS ACC 0;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1; <- PC
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       187
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1; <- PC
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       188
instruction: SUBI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1; <- PC
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       189
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1; <- PC
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       190
instruction: STOREIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2; <- PC
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       191
instruction: LOADIN SP ACC 2;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1; <- PC
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       192
instruction: LOADIN SP IN2 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2; <- PC
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       193
instruction: SUB ACC IN2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3; <- PC
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       194
instruction: JUMP== 3;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483681
PC_SIMPLE:   33
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1; <- PC
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1
  00001 MULTI DS 1024; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       195
instruction: LOADI ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2; <- PC
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       196
instruction: STOREIN SP ACC 2;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483747
SP_SIMPLE:   99
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1; <- PC
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0 <- SP
  00100 1
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       197
instruction: ADDI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1; <- PC
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       198
instruction: LOADIN SP ACC 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483748
SP_SIMPLE:   100
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1; <- PC
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1 <- SP
  00101 1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       199
instruction: ADDI SP 1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483686
PC_SIMPLE:   38
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2; <- PC
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       200
instruction: JUMP== 2;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483687
PC_SIMPLE:   39
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1; <- PC
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;

index:       201
instruction: LOADIN BAF PC -1;
ACC:         1
ACC_SIMPLE:  1
IN1:         0
IN1_SIMPLE:  0
IN2:         1
IN2_SIMPLE:  1
PC:          2147483648
PC_SIMPLE:   0
SP:          2147483749
SP_SIMPLE:   101
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483718
DS_SIMPLE:   70
SRAM:
  00000 JUMP 0; <- PC
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 1; <- CS
  00004 LOADI ACC 4;
  00005 STOREIN SP ACC 1;
  00006 LOADIN SP ACC 1;
  00007 STOREIN DS ACC 0;
  00008 ADDI SP 1;
  00009 SUBI SP 1;
  00010 LOADI ACC 1;
  00011 STOREIN SP ACC 1;
  00012 LOADIN SP ACC 1;
  00013 STOREIN DS ACC 1;
  00014 ADDI SP 1;
  00015 SUBI SP 1;
  00016 LOADI ACC 1;
  00017 STOREIN SP ACC 1;
  00018 LOADIN SP ACC 1;
  00019 ADDI SP 1;
  00020 JUMP== 49;
  00021 SUBI SP 1;
  00022 LOADIN DS ACC 0;
  00023 STOREIN SP ACC 1;
  00024 SUBI SP 1;
  00025 LOADI ACC 1;
  00026 STOREIN SP ACC 1;
  00027 LOADIN SP ACC 2;
  00028 LOADIN SP IN2 1;
  00029 SUB ACC IN2;
  00030 JUMP== 3;
  00031 LOADI ACC 0;
  00032 JUMP 2;
  00033 LOADI ACC 1;
  00034 STOREIN SP ACC 2;
  00035 ADDI SP 1;
  00036 LOADIN SP ACC 1;
  00037 ADDI SP 1;
  00038 JUMP== 2;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN DS ACC 0;
  00042 STOREIN SP ACC 1;
  00043 SUBI SP 1;
  00044 LOADIN DS ACC 1;
  00045 STOREIN SP ACC 1;
  00046 LOADIN SP ACC 2;
  00047 LOADIN SP IN2 1;
  00048 MULT ACC IN2;
  00049 STOREIN SP ACC 2;
  00050 ADDI SP 1;
  00051 LOADIN SP ACC 1;
  00052 STOREIN DS ACC 1;
  00053 ADDI SP 1;
  00054 SUBI SP 1;
  00055 LOADIN DS ACC 0;
  00056 STOREIN SP ACC 1;
  00057 SUBI SP 1;
  00058 LOADI ACC 1;
  00059 STOREIN SP ACC 1;
  00060 LOADIN SP ACC 2;
  00061 LOADIN SP IN2 1;
  00062 SUB ACC IN2;
  00063 STOREIN SP ACC 2;
  00064 ADDI SP 1;
  00065 LOADIN SP ACC 1;
  00066 STOREIN DS ACC 0;
  00067 ADDI SP 1;
  00068 JUMP -53;
  00069 LOADIN BAF PC -1;
  00070 1 <- DS
  00071 24
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
  00078 0
  00079 0
  00080 0
  00081 0
  00082 0
  00083 0
  00084 0
  00085 0
  00086 0
  00087 0
  00088 0
  00089 0
  00090 0
  00091 0
  00092 0
  00093 0
  00094 0
  00095 0
  00096 0
  00097 0
  00098 0
  00099 0
  00100 1
  00101 1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1
  00001 MULTI DS 1024; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 101;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 70;
  00009 MOVE CS PC;