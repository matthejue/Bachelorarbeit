index:       1
instruction: LOADIN BAF PC -1;
ACC:         2147483670
ACC_SIMPLE:  22
IN1:         2147483705
IN1_SIMPLE:  57
IN2:         0
IN2_SIMPLE:  0
PC:          2147483648
PC_SIMPLE:   0
SP:          2147483705
SP_SIMPLE:   57
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483674
DS_SIMPLE:   26
SRAM:
  00000 JUMP 0; <- PC
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 3;
  00007 LOADIN DS ACC 0;
  00008 STOREIN SP ACC 1;
  00009 LOADIN DS ACC 1;
  00010 STOREIN SP ACC 2;
  00011 LOADIN DS ACC 2;
  00012 STOREIN SP ACC 3;
  00013 MOVE BAF ACC;
  00014 ADDI SP 5;
  00015 MOVE SP BAF;
  00016 SUBI SP 5;
  00017 STOREIN BAF ACC 0;
  00018 LOADI ACC 19;
  00019 ADD ACC CS;
  00020 STOREIN BAF ACC -1;
  00021 JUMP -17;
  00022 MOVE BAF IN1; <- ACC
  00023 LOADIN IN1 BAF 0;
  00024 MOVE IN1 SP;
  00025 LOADIN BAF PC -1;
  00026 0 <- DS
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 2147483670
  00057 2147483650 <- IN1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 57;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 26;
  00009 MOVE CS PC;