index:       1
instruction: LOADIN BAF PC -1;
ACC:         2147483665
ACC_SIMPLE:  17
IN1:         2147483701
IN1_SIMPLE:  53
IN2:         0
IN2_SIMPLE:  0
PC:          2147483648
PC_SIMPLE:   0
SP:          2147483701
SP_SIMPLE:   53
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483670
DS_SIMPLE:   22
SRAM:
  00000 JUMP 0; <- PC
  00001 2147483648
  00002 0 <- BAF
  00003 SUBI SP 2; <- CS
  00004 SUBI SP 1;
  00005 LOADI IN1 0;
  00006 ADD IN1 DS;
  00007 STOREIN SP IN1 1;
  00008 MOVE BAF ACC;
  00009 ADDI SP 3;
  00010 MOVE SP BAF;
  00011 SUBI SP 4;
  00012 STOREIN BAF ACC 0;
  00013 LOADI ACC 14;
  00014 ADD ACC CS;
  00015 STOREIN BAF ACC -1;
  00016 JUMP 5;
  00017 MOVE BAF IN1; <- ACC
  00018 LOADIN IN1 BAF 0;
  00019 MOVE IN1 SP;
  00020 LOADIN BAF PC -1;
  00021 LOADIN BAF PC -1;
  00022 0 <- DS
  00023 0
  00024 0
  00025 0
  00026 0
  00027 0
  00028 0
  00029 0
  00030 0
  00031 0
  00032 0
  00033 0
  00034 0
  00035 0
  00036 0
  00037 0
  00038 0
  00039 0
  00040 0
  00041 0
  00042 0
  00043 0
  00044 0
  00045 0
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 2147483670
  00052 2147483665
  00053 2147483650 <- IN1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 53;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 22;
  00009 MOVE CS PC;