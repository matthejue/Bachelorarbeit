index:       1
instruction: LOADI DS -2097152;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          1
PC_SIMPLE:   1
SP:          0
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2097152
DS_SIMPLE:   2097152
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2;
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- SP <- BAF <- CS
  00001 MULTI DS 1024; <- PC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       2
instruction: MULTI DS 1024;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2
PC_SIMPLE:   2
SP:          0
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- DS
  00001 2147483648
  00002 0
  00003 JUMP 2;
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- SP <- BAF <- CS
  00001 MULTI DS 1024;
  00002 MOVE DS SP; <- PC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       3
instruction: MOVE DS SP;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          3
PC_SIMPLE:   3
SP:          2147483648
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- SP <- DS
  00001 2147483648
  00002 0
  00003 JUMP 2;
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- BAF <- CS
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- PC
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       4
instruction: MOVE DS BAF;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          4
PC_SIMPLE:   4
SP:          2147483648
SP_SIMPLE:   0
BAF:         2147483648
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- SP <- BAF <- DS
  00001 2147483648
  00002 0
  00003 JUMP 2;
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2 <- CS
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- PC
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       5
instruction: MOVE DS CS;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          5
PC_SIMPLE:   5
SP:          2147483648
SP_SIMPLE:   0
BAF:         2147483648
BAF_SIMPLE:  0
CS:          2147483648
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- SP <- BAF <- CS <- DS
  00001 2147483648
  00002 0
  00003 JUMP 2;
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77; <- PC
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       6
instruction: ADDI SP 77;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          6
PC_SIMPLE:   6
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483648
BAF_SIMPLE:  0
CS:          2147483648
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- BAF <- CS <- DS
  00001 2147483648
  00002 0
  00003 JUMP 2;
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2; <- PC
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       7
instruction: ADDI BAF 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          7
PC_SIMPLE:   7
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483648
CS_SIMPLE:   0
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- CS <- DS
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2;
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3; <- PC
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       8
instruction: ADDI CS 3;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          8
PC_SIMPLE:   8
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483648
DS_SIMPLE:   0
SRAM:
  00000 JUMP 0; <- DS
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46; <- PC
  00009 MOVE CS PC;

index:       9
instruction: ADDI DS 46;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          9
PC_SIMPLE:   9
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC; <- PC

index:       10
instruction: MOVE CS PC;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483651
PC_SIMPLE:   3
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- PC <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       11
instruction: JUMP 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2; <- PC
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0
  00076 0
  00077 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       12
instruction: SUBI SP 2;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1; <- PC
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 0 <- SP
  00076 0
  00077 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       13
instruction: SUBI SP 1;
ACC:         0
ACC_SIMPLE:  0
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42; <- PC
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0 <- SP
  00075 0
  00076 0
  00077 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- ACC <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       14
instruction: LOADI ACC 42;
ACC:         42
ACC_SIMPLE:  42
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1; <- PC
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0 <- SP
  00075 0
  00076 0
  00077 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       15
instruction: STOREIN SP ACC 1;
ACC:         42
ACC_SIMPLE:  42
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC; <- PC
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0 <- SP
  00075 42
  00076 0
  00077 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       16
instruction: MOVE BAF ACC;
ACC:         2147483650
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- ACC <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3; <- PC
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0 <- SP
  00075 42
  00076 0
  00077 0
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       17
instruction: ADDI SP 3;
ACC:         2147483650
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- ACC <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF; <- PC
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 42
  00076 0
  00077 0 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       18
instruction: MOVE SP BAF;
ACC:         2147483650
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- ACC
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3; <- PC
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0
  00075 42
  00076 0
  00077 0 <- SP <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       19
instruction: SUBI SP 3;
ACC:         2147483650
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- ACC
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0; <- PC
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0 <- SP
  00075 42
  00076 0
  00077 0 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       20
instruction: STOREIN BAF ACC 0;
ACC:         2147483650
ACC_SIMPLE:  2
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- ACC
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15; <- PC
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0 <- SP
  00075 42
  00076 0
  00077 2147483650 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       21
instruction: LOADI ACC 15;
ACC:         15
ACC_SIMPLE:  15
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS; <- PC
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0 <- SP
  00075 42
  00076 0
  00077 2147483650 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       22
instruction: ADD ACC CS;
ACC:         2147483666
ACC_SIMPLE:  18
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1; <- PC
  00017 JUMP 23;
  00018 MOVE BAF IN1; <- ACC
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0 <- SP
  00075 42
  00076 0
  00077 2147483650 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       23
instruction: STOREIN BAF ACC -1;
ACC:         2147483666
ACC_SIMPLE:  18
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23; <- PC
  00018 MOVE BAF IN1; <- ACC
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0 <- SP
  00075 42
  00076 2147483666
  00077 2147483650 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       24
instruction: JUMP 23;
ACC:         2147483666
ACC_SIMPLE:  18
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483688
PC_SIMPLE:   40
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1; <- ACC
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1; <- PC
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 0 <- SP
  00075 42
  00076 2147483666
  00077 2147483650 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       25
instruction: SUBI SP 1;
ACC:         2147483666
ACC_SIMPLE:  18
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483689
PC_SIMPLE:   41
SP:          2147483721
SP_SIMPLE:   73
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1; <- ACC
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2; <- PC
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0 <- SP
  00074 0
  00075 42
  00076 2147483666
  00077 2147483650 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       26
instruction: LOADIN BAF ACC -2;
ACC:         42
ACC_SIMPLE:  42
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483690
PC_SIMPLE:   42
SP:          2147483721
SP_SIMPLE:   73
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1; <- PC
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0 <- SP
  00074 0
  00075 42
  00076 2147483666
  00077 2147483650 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       27
instruction: STOREIN SP ACC 1;
ACC:         42
ACC_SIMPLE:  42
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483691
PC_SIMPLE:   43
SP:          2147483721
SP_SIMPLE:   73
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1; <- PC
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0 <- SP
  00074 42
  00075 42
  00076 2147483666
  00077 2147483650 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       28
instruction: LOADIN SP ACC 1;
ACC:         42
ACC_SIMPLE:  42
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483692
PC_SIMPLE:   44
SP:          2147483721
SP_SIMPLE:   73
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1; <- PC
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0 <- SP
  00074 42
  00075 42
  00076 2147483666
  00077 2147483650 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       29
instruction: ADDI SP 1;
ACC:         42
ACC_SIMPLE:  42
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1; <- PC
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42 <- SP
  00075 42
  00076 2147483666
  00077 2147483650 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       30
instruction: LOADIN BAF PC -1;
ACC:         42
ACC_SIMPLE:  42
IN1:         0
IN1_SIMPLE:  0
IN2:         0
IN2_SIMPLE:  0
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1; <- PC
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42 <- SP
  00075 42
  00076 2147483666
  00077 2147483650 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN1 <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       31
instruction: MOVE BAF IN1;
ACC:         42
ACC_SIMPLE:  42
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0; <- PC
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42 <- SP
  00075 42
  00076 2147483666
  00077 2147483650 <- IN1 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       32
instruction: LOADIN IN1 BAF 0;
ACC:         42
ACC_SIMPLE:  42
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483722
SP_SIMPLE:   74
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP; <- PC
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42 <- SP
  00075 42
  00076 2147483666
  00077 2147483650 <- IN1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       33
instruction: MOVE IN1 SP;
ACC:         42
ACC_SIMPLE:  42
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1; <- PC
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42
  00076 2147483666
  00077 2147483650 <- IN1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       34
instruction: SUBI SP 1;
ACC:         42
ACC_SIMPLE:  42
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483724
SP_SIMPLE:   76
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1; <- PC
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42
  00076 2147483666 <- SP
  00077 2147483650 <- IN1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       35
instruction: STOREIN SP ACC 1;
ACC:         42
ACC_SIMPLE:  42
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483724
SP_SIMPLE:   76
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1; <- PC
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42
  00076 2147483666 <- SP
  00077 42 <- IN1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       36
instruction: LOADIN SP ACC 1;
ACC:         42
ACC_SIMPLE:  42
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483724
SP_SIMPLE:   76
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0; <- PC
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 0 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42
  00076 2147483666 <- SP
  00077 42 <- IN1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       37
instruction: STOREIN DS ACC 0;
ACC:         42
ACC_SIMPLE:  42
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483724
SP_SIMPLE:   76
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1; <- PC
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42
  00076 2147483666 <- SP
  00077 42 <- IN1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       38
instruction: ADDI SP 1;
ACC:         42
ACC_SIMPLE:  42
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2; <- PC
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42
  00076 2147483666
  00077 42 <- IN1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       39
instruction: SUBI SP 2;
ACC:         42
ACC_SIMPLE:  42
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC; <- PC
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42 <- SP
  00076 2147483666
  00077 42 <- IN1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       40
instruction: MOVE BAF ACC;
ACC:         2147483650
ACC_SIMPLE:  2
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- ACC <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2; <- PC
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42 <- SP
  00076 2147483666
  00077 42 <- IN1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       41
instruction: ADDI SP 2;
ACC:         2147483650
ACC_SIMPLE:  2
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- ACC <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF; <- PC
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42
  00076 2147483666
  00077 42 <- IN1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       42
instruction: MOVE SP BAF;
ACC:         2147483650
ACC_SIMPLE:  2
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- ACC
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2; <- PC
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42
  00076 2147483666
  00077 42 <- IN1 <- SP <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       43
instruction: SUBI SP 2;
ACC:         2147483650
ACC_SIMPLE:  2
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- ACC
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0; <- PC
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42 <- SP
  00076 2147483666
  00077 42 <- IN1 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       44
instruction: STOREIN BAF ACC 0;
ACC:         2147483650
ACC_SIMPLE:  2
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483680
PC_SIMPLE:   32
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- ACC
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33; <- PC
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42 <- SP
  00076 2147483666
  00077 2147483650 <- IN1 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       45
instruction: LOADI ACC 33;
ACC:         33
ACC_SIMPLE:  33
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483681
PC_SIMPLE:   33
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS; <- PC
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1;
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42 <- SP
  00076 2147483666
  00077 2147483650 <- IN1 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       46
instruction: ADD ACC CS;
ACC:         2147483684
ACC_SIMPLE:  36
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1; <- PC
  00035 JUMP -31;
  00036 MOVE BAF IN1; <- ACC
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42 <- SP
  00076 2147483666
  00077 2147483650 <- IN1 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       47
instruction: STOREIN BAF ACC -1;
ACC:         2147483684
ACC_SIMPLE:  36
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31; <- PC
  00036 MOVE BAF IN1; <- ACC
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42 <- SP
  00076 2147483684
  00077 2147483650 <- IN1 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       48
instruction: JUMP -31;
ACC:         2147483684
ACC_SIMPLE:  36
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483652
PC_SIMPLE:   4
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1; <- PC
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1; <- ACC
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42 <- SP
  00076 2147483684
  00077 2147483650 <- IN1 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       49
instruction: LOADIN BAF PC -1;
ACC:         2147483684
ACC_SIMPLE:  36
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1; <- ACC <- PC
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42 <- SP
  00076 2147483684
  00077 2147483650 <- IN1 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       50
instruction: MOVE BAF IN1;
ACC:         2147483684
ACC_SIMPLE:  36
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483725
BAF_SIMPLE:  77
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1; <- ACC
  00037 LOADIN IN1 BAF 0; <- PC
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42 <- SP
  00076 2147483684
  00077 2147483650 <- IN1 <- BAF
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       51
instruction: LOADIN IN1 BAF 0;
ACC:         2147483684
ACC_SIMPLE:  36
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483686
PC_SIMPLE:   38
SP:          2147483723
SP_SIMPLE:   75
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1; <- ACC
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP; <- PC
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42 <- SP
  00076 2147483684
  00077 2147483650 <- IN1
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       52
instruction: MOVE IN1 SP;
ACC:         2147483684
ACC_SIMPLE:  36
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483687
PC_SIMPLE:   39
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0;
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1; <- ACC
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1; <- PC
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42
  00076 2147483684
  00077 2147483650 <- IN1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;

index:       53
instruction: LOADIN BAF PC -1;
ACC:         2147483684
ACC_SIMPLE:  36
IN1:         2147483725
IN1_SIMPLE:  77
IN2:         0
IN2_SIMPLE:  0
PC:          2147483648
PC_SIMPLE:   0
SP:          2147483725
SP_SIMPLE:   77
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          2147483694
DS_SIMPLE:   46
SRAM:
  00000 JUMP 0; <- PC
  00001 2147483648
  00002 0 <- BAF
  00003 JUMP 2; <- CS
  00004 LOADIN BAF PC -1;
  00005 SUBI SP 2;
  00006 SUBI SP 1;
  00007 LOADI ACC 42;
  00008 STOREIN SP ACC 1;
  00009 MOVE BAF ACC;
  00010 ADDI SP 3;
  00011 MOVE SP BAF;
  00012 SUBI SP 3;
  00013 STOREIN BAF ACC 0;
  00014 LOADI ACC 15;
  00015 ADD ACC CS;
  00016 STOREIN BAF ACC -1;
  00017 JUMP 23;
  00018 MOVE BAF IN1;
  00019 LOADIN IN1 BAF 0;
  00020 MOVE IN1 SP;
  00021 SUBI SP 1;
  00022 STOREIN SP ACC 1;
  00023 LOADIN SP ACC 1;
  00024 STOREIN DS ACC 0;
  00025 ADDI SP 1;
  00026 SUBI SP 2;
  00027 MOVE BAF ACC;
  00028 ADDI SP 2;
  00029 MOVE SP BAF;
  00030 SUBI SP 2;
  00031 STOREIN BAF ACC 0;
  00032 LOADI ACC 33;
  00033 ADD ACC CS;
  00034 STOREIN BAF ACC -1;
  00035 JUMP -31;
  00036 MOVE BAF IN1; <- ACC
  00037 LOADIN IN1 BAF 0;
  00038 MOVE IN1 SP;
  00039 LOADIN BAF PC -1;
  00040 SUBI SP 1;
  00041 LOADIN BAF ACC -2;
  00042 STOREIN SP ACC 1;
  00043 LOADIN SP ACC 1;
  00044 ADDI SP 1;
  00045 LOADIN BAF PC -1;
  00046 42 <- DS
  00047 0
  00048 0
  00049 0
  00050 0
  00051 0
  00052 0
  00053 0
  00054 0
  00055 0
  00056 0
  00057 0
  00058 0
  00059 0
  00060 0
  00061 0
  00062 0
  00063 0
  00064 0
  00065 0
  00066 0
  00067 0
  00068 0
  00069 0
  00070 0
  00071 0
  00072 0
  00073 0
  00074 42
  00075 42
  00076 2147483684
  00077 2147483650 <- IN1 <- SP
UART:
  00000 0
  00001 0
  00002 0
  00003 0
EPROM:
  00000 LOADI DS -2097152; <- IN2
  00001 MULTI DS 1024;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 77;
  00006 ADDI BAF 2;
  00007 ADDI CS 3;
  00008 ADDI DS 46;
  00009 MOVE CS PC;