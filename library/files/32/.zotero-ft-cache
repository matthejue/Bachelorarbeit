

    0
    +0
    Log in
    Sign up

Reverse Engineering Stack Exchange is a question and answer site for researchers and developers who explore the principles of a system through analysis of its structure, function, and operation. It only takes a minute to sign up.
Sign up to join this community
Anybody can ask a question
Anybody can answer
The best answers are voted up and rise to the top
Reverse Engineering

    Home
        Public
        Questions
        Tags
        Users
        Unanswered
        Teams
        Stack Overflow for Teams – Start collaborating and sharing organizational knowledge. Create a free Team Why Teams?

What is an immediate value?
Ask Question
Asked 4 years, 1 month ago
Modified 4 years ago
Viewed 13k times
This question shows research effort; it is useful and clear
2
This question does not show any research effort; it is unclear or not useful
Bookmark this question.
Show activity on this post.

I just read this post .

What does mean an " immediate value " ? Is there any string/ascii there?

How can I find this value on the binary file?

I have the same code and when I search on 0x28 address I dont see any value.
assembly arm
Share
Improve this question
Follow
Follow this question to receive notifications
edited Apr 4, 2018 at 11:42
user avatar
Chris
103 4 4 bronze badges
asked Mar 12, 2018 at 21:21
user avatar
Ljohhuh Ljohhuh
41 1 1 gold badge 1 1 silver badge 4 4 bronze badges
Add a comment  | 
3 Answers 3
Sorted by: Reset to default
This answer is useful
5
This answer is not useful
Show activity on this post.

In the area of machine code/instruction sets, an immediate value is a constant number embedded into the instruction itself , as opposed to one loaded from another place. For example, on x86:

 6A 03 push 3  

Here, 3 is an immediate because it's included directly as part of the opcode (in the second byte).

On ARM:

 00 00 50 E3 CMP R0, #0  

here, 0 is again an immediate because it's encoded in bits of the opcode. In ARM assembly, immediates are usually marked with # symbol, although it is optional in later revisions when unambiguous.

Another example:

 C8 30 1F E5 LDR R3, =0xC0B8  

Here, despite appearances, 0xC0B8 is not an immediate. If we turn on [x] Disable pointer dereferencing in IDA, it is shown as:

 LDR R3, dword_BDE0  

and

 B8 C0 00 00 dword_BDE0 DCD 0xC0B8  

I.e. this value is not embedded into the instruction but is loaded from the literal pool (an area reserved for storage of values not representable as immediates), but by default IDA simplifies such instructions to show directly the loaded value (this syntax is supported by most ARM assemblers).
Share
Improve this answer
Follow
Follow this answer to receive notifications
answered Mar 13, 2018 at 8:54
user avatar
Igor Skochinsky ♦ Igor Skochinsky
34.5k 6 6 gold badges 60 60 silver badges 112 112 bronze badges
Add a comment  | 
This answer is useful
2
This answer is not useful
Show activity on this post.

An immediate value is a value that is stored in the instruction.

For example (in PIC16 because that's what I'm familiar with):

 MOVlw 0x01 MOVwf 0x07h MOVlw 0x01 ADDwf 0x07h,0  

What this program does is as follows:

    Move a literal value of hex 01 into the accumulator
    Move the accumulator to memory address 0x07h
    Move a literal value of hex 01 into the accumulator
    Add the address 0x07h to the accumulator and store in the accumulator.

This is a program to show us the difference between a literal (immediate) value and direct addressing.

On the first instruction, MOVlw 0x01 we move a literal value into the accumulator. This means that the value is taken directly from the instruction , as opposed to being taken from a register which the instruction points to. When the processor reads this instruction, it takes the operand (which in this case is an immediate value), and places it directly into the accumulator. It does not need to make a register or memory access other than that necessary to get the instruction.

On the fourth instruction, ADDwf 0x07h,0 , we do the opposite of the above. Instead of taking the value directly from the instruction, the instruction contains the address that the value is stored in , in memory. So, when the processor reads this instruction, it requests from memory the value located in address 0x07h and does the operation with the value that the memory returns.

As a further example, let's look at how those two instructions might look at the byte level (be aware that this may not be the correct machine code for an actual PIC16 microcontroller):

Let's assume that our instructions have 8 bit opcodes and 8 bit operands.

Our two instructions: MOVlw 0x01 and ADDwf 0x07h,0 might become something like: 01 01 and 02 7h 00 . This makes it much easier to see what's really going on.

In 01 01 ( MOVlw 0x01 ), the value 01 comes directly from the operand field of the instruction. However, in 02 7h 00 ( ADDwf 0x07h,0 ), the operand 7h is an address where the actual operand (in this case another 01 ) of the instruction is stored.
Share
Improve this answer
Follow
Follow this answer to receive notifications
answered Mar 19, 2018 at 8:11
user avatar
superstewie superstewie
21 2 2 bronze badges
Add a comment  | 
This answer is useful
1
This answer is not useful
Show activity on this post.

An " immediate value " is an hardcoded value included in the program. It is all the static values that are present in a program. For example (if translated to C):

 x = 10;  

x is a variable and 10 is an immediate value.

Concerning, " where to find the value ", it is in the register r0 . I cannot tell more than that. If you do not know what a register is, you may just ask Wikipedia about that .
Share
Improve this answer
Follow
Follow this answer to receive notifications
answered Mar 12, 2018 at 23:35
user avatar
perror perror
17.9k 28 28 gold badges 82 82 silver badges 145 145 bronze badges
5

    I not sure I get you , (I know what is register) if I see ldr r0 #0x28 so in r0 will be the string that in 0x28 address?
    –  Ljohhuh
    Mar 13, 2018 at 16:42
    No, the value 0x28. An immediate value is a value .
    –  perror
    Mar 13, 2018 at 16:44
    so r0=0x28 (Value?) that strange becuase I saw it on loop that ldr r0 #0x28 and ldr r1 #0x32 and that happend every loop and after that check r0 and r1 are equal so get out from loop . so if it assign of 0x28 and 0x32 they aways be not equal
    –  Ljohhuh
    Mar 13, 2018 at 18:00
    I cannot comment if I cannot see the code...
    –  perror
    Mar 13, 2018 at 18:03
    ok so you tell that ldr ro #0x28 so r0=0x28(value ) can you please tell me what does it mean ldr r0 =0x1234 ? that mean that r0 get the value that store on 0x1234?
    –  Ljohhuh
    Mar 13, 2018 at 18:10

Add a comment  | 
Your Answer

Draft saved
Draft discarded
Sign up or log in
Sign up using Google
Sign up using Facebook
Sign up using Email and Password
Submit
Post as a guest
Name
Email

Required, but never shown
Post as a guest
Name
Email

Required, but never shown
Post Your Answer Discard

By clicking “Post Your Answer”, you agree to our terms of service , privacy policy and cookie policy
Not the answer you're looking for? Browse other questions tagged assembly arm or ask your own question .

    The Overflow Blog
    The complete guide to protecting your APIs with OAuth2
    Featured on Meta
    How might the Staging Ground & the new Ask Wizard work on the Stack Exchange...

Linked
4
How does the ldr instruction work on ARM?
1
Explenation about opcode and operand
Related
2
What does lea rdx,qword ptr ss:[rbp+50] mean?
3
Getting Access Violation when patching a program
1
Reverse engineering ARM PIC
4
How does the ldr instruction work on ARM?
5
What does XREF mean?
0
What does ds mean?
0
Understand what Ioctl do
0
What is the meaning of jmp dword ptr off_XXXXXXXX + 8 in IDA?
1
How to interpret memory dumps?
Hot Network Questions

    Using Adverbs of Frequency in Present Continuous Tense
    Is Boris Johnson the first serving British prime minister to be found to have broken the law?
    Can an "FBI domain seizure" April Fools joke land you in jail?
    Has Russia actually defaulted on its foreign debt as of April 11, 2022?
    Swimming against the tide in the past century: remarkable achievements that arose in contrast to the general view of mathematicians
    How can I output all zero-point data by graphing?
    How can I implement a "passive stealth" that is mathematically equivalent to rolling stealth vs. passive perception?
    Can non-parametric data have mean value and standard deviation?
    Can a petrified character drown?
    How can I delay the Trim Curve happen in different times for each curve?
    What does "careabouts" mean?
    What is the origin of the word "latte" referring to a caffè latte?
    Could I, within my lifetime, reach any star I wanted if I went fast enough?
    How can I use a private key in an ssh client for only one host?
    MSVC vs GCC & Clang Bug while using lambdas
    Can't get back exam due to absence
    PhD advisor switching schools wants me to go with him
    How can plants reliably intentionally poison those that eat their fruit?
    What is the simplest set of rules a masquerade can have to maintain history as we know it?
    Can CASE be used to select which table to JOIN?
    Potestas est in veritate. Quis vero, robustior
    How to generate a list of combinations of string joins?
    Why would a supermassive sarlac-like creature let captured prey wander around inside itself?
    1960s (?) film about an underground civilization

Question feed
Subscribe to RSS
Question feed

To subscribe to this RSS feed, copy and paste this URL into your RSS reader.
Reverse Engineering

    Tour
    Help
    Chat
    Contact
    Feedback

Company

    Stack Overflow
    Teams
    Advertising
    Collectives
    Talent
    About
    Press
    Legal
    Privacy Policy
    Terms of Service
    Cookie Settings
    Cookie Policy

Stack Exchange Network

    Technology
    Culture & recreation
    Life & arts
    Science
    Professional
    Business
    API
    Data

    Blog
    Facebook
    Twitter
    LinkedIn
    Instagram

Site design / logo © 2022 Stack Exchange Inc; user contributions licensed under cc by-sa . rev 2022.4.12.41952
Reverse Engineering Stack Exchange works best with JavaScript enabled

Your privacy

By clicking “Accept all cookies”, you agree Stack Exchange can store cookies on your device and disclose information in accordance with our Cookie Policy .
Accept all cookies Customize settings
 
